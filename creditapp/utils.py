# utils.py
from django.core.mail import send_mail
from threading import Thread
from .models import EmailOTP
import re
from django.core.exceptions import ValidationError
from django.core.mail import EmailMultiAlternatives

def send_otp_email(email):
    otp = EmailOTP.generate_otp()
    EmailOTP.objects.create(email=email, otp=otp)

    def _send():
        subject = 'Your OTP Verification Code'
        from_email = None  # Uses DEFAULT_FROM_EMAIL from settings
        to = [email]
        text_content = f'Your OTP is {otp}'
        html_content = f'''
            <html>
            <body>
                <p>Dear user,</p>
                <p>Your OTP is: <code style="font-size: 16px;">{otp}</code></p>
                <p>Your code expires in 10 minutes.</p>
                <p>Notice: This email is automatically generated by the system, please do not reply to this email.</p>
                <p>Use this code to verify your account. Do not share it with anyone.</p>
                <br>
                <p>Thanks You<br>Tempgmail.net</p>
            </body>
            </html>
        '''

        msg = EmailMultiAlternatives(subject, text_content, from_email, to)
        msg.attach_alternative(html_content, "text/html")
        msg.send(fail_silently=False)

    Thread(target=_send).start()



def validate_password(password):
    """Validate password strength"""
    if len(password) < 8:
        raise ValidationError("Password must be at least 8 characters long.")
    if not re.search(r'[A-Z]', password):
        raise ValidationError("Password must contain an uppercase letter.")
    if not re.search(r'[a-z]', password):
        raise ValidationError("Password must contain a lowercase letter.")
    if not re.search(r'[0-9]', password):
        raise ValidationError("Password must contain a digit.")
    if not re.search(r'[!@#$%^&*]', password):
        raise ValidationError("Password must contain a special character (!@#$%^&*).")